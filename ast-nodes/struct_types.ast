=== AST for struct_types.go ===

File Information:
  Package: main
  Position: go-nodes/struct_types.go:3:1
  Imports:
    "fmt"
  Comment Groups: 36
  Declarations: 15

=== AST Node Tree ===

*ast.File (go-nodes/struct_types.go:3:1)
  Package: main
  *ast.GenDecl (go-nodes/struct_types.go:5:1) Token: import
    *ast.ImportSpec (go-nodes/struct_types.go:5:8)
      Path: "fmt"
  *ast.GenDecl (go-nodes/struct_types.go:14:1) Token: type
    *ast.TypeSpec (go-nodes/struct_types.go:14:6)
      Name: Person
      Type:
        *ast.StructType (go-nodes/struct_types.go:14:13)
          *ast.FieldList (go-nodes/struct_types.go:14:20) NumFields: 2
            Field[0]:
              *ast.Field (go-nodes/struct_types.go:15:2)
                Name: Name
                Type:
                  *ast.Ident (go-nodes/struct_types.go:15:7) Name: string
            Field[1]:
              *ast.Field (go-nodes/struct_types.go:16:2)
                Name: Age
                Type:
                  *ast.Ident (go-nodes/struct_types.go:16:7) Name: int
  *ast.GenDecl (go-nodes/struct_types.go:20:1) Token: type
    *ast.TypeSpec (go-nodes/struct_types.go:20:6)
      Name: JSONPerson
      Type:
        *ast.StructType (go-nodes/struct_types.go:20:17)
          *ast.FieldList (go-nodes/struct_types.go:20:24) NumFields: 3
            Field[0]:
              *ast.Field (go-nodes/struct_types.go:21:2)
                Name: Name
                Type:
                  *ast.Ident (go-nodes/struct_types.go:21:8) Name: string
            Field[1]:
              *ast.Field (go-nodes/struct_types.go:22:2)
                Name: Age
                Type:
                  *ast.Ident (go-nodes/struct_types.go:22:8) Name: int
            Field[2]:
              *ast.Field (go-nodes/struct_types.go:23:2)
                Name: Email
                Type:
                  *ast.Ident (go-nodes/struct_types.go:23:8) Name: string
  *ast.GenDecl (go-nodes/struct_types.go:27:1) Token: type
    *ast.TypeSpec (go-nodes/struct_types.go:27:6)
      Name: Address
      Type:
        *ast.StructType (go-nodes/struct_types.go:27:14)
          *ast.FieldList (go-nodes/struct_types.go:27:21) NumFields: 3
            Field[0]:
              *ast.Field (go-nodes/struct_types.go:28:2)
                Name: Street
                Type:
                  *ast.Ident (go-nodes/struct_types.go:28:9) Name: string
            Field[1]:
              *ast.Field (go-nodes/struct_types.go:29:2)
                Name: City
                Type:
                  *ast.Ident (go-nodes/struct_types.go:29:9) Name: string
            Field[2]:
              *ast.Field (go-nodes/struct_types.go:30:2)
                Name: Zip
                Type:
                  *ast.Ident (go-nodes/struct_types.go:30:9) Name: string
  *ast.GenDecl (go-nodes/struct_types.go:33:1) Token: type
    *ast.TypeSpec (go-nodes/struct_types.go:33:6)
      Name: Employee
      Type:
        *ast.StructType (go-nodes/struct_types.go:33:15)
          *ast.FieldList (go-nodes/struct_types.go:33:22) NumFields: 4
            Field[0]:
              *ast.Field (go-nodes/struct_types.go:34:2)
                Type:
                  *ast.Ident (go-nodes/struct_types.go:34:2) Name: Person
            Field[1]:
              *ast.Field (go-nodes/struct_types.go:35:2)
                Type:
                  *ast.Ident (go-nodes/struct_types.go:35:2) Name: Address
            Field[2]:
              *ast.Field (go-nodes/struct_types.go:36:2)
                Name: EmployeeID
                Type:
                  *ast.Ident (go-nodes/struct_types.go:36:13) Name: int
            Field[3]:
              *ast.Field (go-nodes/struct_types.go:37:2)
                Name: Department
                Type:
                  *ast.Ident (go-nodes/struct_types.go:37:13) Name: string
  *ast.GenDecl (go-nodes/struct_types.go:41:1) Token: type
    *ast.TypeSpec (go-nodes/struct_types.go:41:6)
      Name: Mixed
      Type:
        *ast.StructType (go-nodes/struct_types.go:41:12)
          *ast.FieldList (go-nodes/struct_types.go:41:19) NumFields: 3
            Field[0]:
              *ast.Field (go-nodes/struct_types.go:42:2)
                Type:
                  *ast.Ident (go-nodes/struct_types.go:42:2) Name: int
            Field[1]:
              *ast.Field (go-nodes/struct_types.go:43:2)
                Type:
                  *ast.Ident (go-nodes/struct_types.go:43:2) Name: string
            Field[2]:
              *ast.Field (go-nodes/struct_types.go:44:2)
                Name: Named
                Type:
                  *ast.Ident (go-nodes/struct_types.go:44:8) Name: int
  *ast.GenDecl (go-nodes/struct_types.go:48:1) Token: type
    *ast.TypeSpec (go-nodes/struct_types.go:48:6)
      Name: Node
      Type:
        *ast.StructType (go-nodes/struct_types.go:48:11)
          *ast.FieldList (go-nodes/struct_types.go:48:18) NumFields: 3
            Field[0]:
              *ast.Field (go-nodes/struct_types.go:49:2)
                Name: Value
                Type:
                  *ast.Ident (go-nodes/struct_types.go:49:8) Name: int
            Field[1]:
              *ast.Field (go-nodes/struct_types.go:50:2)
                Name: Next
                Type:
                  *ast.StarExpr (go-nodes/struct_types.go:50:8)
            Field[2]:
              *ast.Field (go-nodes/struct_types.go:51:2)
                Name: Prev
                Type:
                  *ast.StarExpr (go-nodes/struct_types.go:51:8)
  *ast.GenDecl (go-nodes/struct_types.go:55:1) Token: type
    *ast.TypeSpec (go-nodes/struct_types.go:55:6)
      Name: Empty
      Type:
        *ast.StructType (go-nodes/struct_types.go:55:12)
          *ast.FieldList (go-nodes/struct_types.go:55:18) NumFields: 0
  *ast.GenDecl (go-nodes/struct_types.go:58:1) Token: type
    *ast.TypeSpec (go-nodes/struct_types.go:58:6)
      Name: Complex
      Type:
        *ast.StructType (go-nodes/struct_types.go:58:14)
          *ast.FieldList (go-nodes/struct_types.go:58:21) NumFields: 11
            Field[0]:
              *ast.Field (go-nodes/struct_types.go:60:2)
                Name: IntField
                Type:
                  *ast.Ident (go-nodes/struct_types.go:60:14) Name: int
            Field[1]:
              *ast.Field (go-nodes/struct_types.go:61:2)
                Name: StringField
                Type:
                  *ast.Ident (go-nodes/struct_types.go:61:14) Name: string
            Field[2]:
              *ast.Field (go-nodes/struct_types.go:62:2)
                Name: BoolField
                Type:
                  *ast.Ident (go-nodes/struct_types.go:62:14) Name: bool
            Field[3]:
              *ast.Field (go-nodes/struct_types.go:65:2)
                Name: PtrField
                Type:
                  *ast.StarExpr (go-nodes/struct_types.go:65:11)
            Field[4]:
              *ast.Field (go-nodes/struct_types.go:68:2)
                Name: ArrayField
                Type:
                  *ast.ArrayType (go-nodes/struct_types.go:68:13)
                    Len:
                      *ast.BasicLit (go-nodes/struct_types.go:68:14) Kind: INT Value: 3
                    Elt:
                      *ast.Ident (go-nodes/struct_types.go:68:16) Name: int
            Field[5]:
              *ast.Field (go-nodes/struct_types.go:69:2)
                Name: SliceField
                Type:
                  *ast.ArrayType (go-nodes/struct_types.go:69:13)
                    Elt:
                      *ast.Ident (go-nodes/struct_types.go:69:15) Name: string
            Field[6]:
              *ast.Field (go-nodes/struct_types.go:72:2)
                Name: MapField
                Type:
                  *ast.MapType (go-nodes/struct_types.go:72:11)
                    Key:
                      *ast.Ident (go-nodes/struct_types.go:72:15) Name: string
                    Value:
                      *ast.Ident (go-nodes/struct_types.go:72:22) Name: int
            Field[7]:
              *ast.Field (go-nodes/struct_types.go:75:2)
                Name: ChanField
                Type:
                  *ast.ChanType (go-nodes/struct_types.go:75:12) Dir: %!s(ast.ChanDir=3)
                    Value:
                      *ast.Ident (go-nodes/struct_types.go:75:17) Name: int
            Field[8]:
              *ast.Field (go-nodes/struct_types.go:78:2)
                Name: FuncField
                Type:
                  *ast.FuncType (go-nodes/struct_types.go:78:12)
                    Params:
                      *ast.FieldList (go-nodes/struct_types.go:78:16) NumFields: 1
                        Field[0]:
                          *ast.Field (go-nodes/struct_types.go:78:17)
                            Type:
                              *ast.Ident (go-nodes/struct_types.go:78:17) Name: int
                    Results:
                      *ast.FieldList (go-nodes/struct_types.go:78:22) NumFields: 1
                        Field[0]:
                          *ast.Field (go-nodes/struct_types.go:78:22)
                            Type:
                              *ast.Ident (go-nodes/struct_types.go:78:22) Name: string
            Field[9]:
              *ast.Field (go-nodes/struct_types.go:81:2)
                Name: IfaceField
                Type:
                  *ast.InterfaceType (go-nodes/struct_types.go:81:13)
                    *ast.FieldList (go-nodes/struct_types.go:81:22) NumFields: 0
            Field[10]:
              *ast.Field (go-nodes/struct_types.go:84:2)
                Name: NestedField
                Type:
                  *ast.StructType (go-nodes/struct_types.go:84:14)
                    *ast.FieldList (go-nodes/struct_types.go:84:21) NumFields: 2
                      Field[0]:
                        *ast.Field (go-nodes/struct_types.go:85:3)
                          Name: X
                          Type:
                            *ast.Ident (go-nodes/struct_types.go:85:5) Name: int
                      Field[1]:
                        *ast.Field (go-nodes/struct_types.go:86:3)
                          Name: Y
                          Type:
                            *ast.Ident (go-nodes/struct_types.go:86:5) Name: int
  *ast.GenDecl (go-nodes/struct_types.go:91:1) Token: type
    *ast.TypeSpec (go-nodes/struct_types.go:91:6)
      Name: Encapsulated
      Type:
        *ast.StructType (go-nodes/struct_types.go:91:19)
          *ast.FieldList (go-nodes/struct_types.go:91:26) NumFields: 2
            Field[0]:
              *ast.Field (go-nodes/struct_types.go:92:2)
                Name: Public
                Type:
                  *ast.Ident (go-nodes/struct_types.go:92:10) Name: string
            Field[1]:
              *ast.Field (go-nodes/struct_types.go:93:2)
                Name: private
                Type:
                  *ast.Ident (go-nodes/struct_types.go:93:10) Name: int
  *ast.FuncDecl (go-nodes/struct_types.go:96:1)
    Name: funcMain
    Type:
      *ast.FuncType (go-nodes/struct_types.go:96:1)
        Params:
          *ast.FieldList (go-nodes/struct_types.go:96:14) NumFields: 0
    Body:
      *ast.BlockStmt (go-nodes/struct_types.go:96:17) Stmts: 63
        *ast.ExprStmt (go-nodes/struct_types.go:97:2)
          *ast.CallExpr (go-nodes/struct_types.go:97:2)
            Fun:
              *ast.SelectorExpr (go-nodes/struct_types.go:97:2)
                X:
                  *ast.Ident (go-nodes/struct_types.go:97:2) Name: fmt
                Sel: Println
            Args:
              [0]:
                *ast.BasicLit (go-nodes/struct_types.go:97:14) Kind: STRING Value: "=== struct_types.go AST Node Coverage ==="
        *ast.ExprStmt (go-nodes/struct_types.go:98:2)
          *ast.CallExpr (go-nodes/struct_types.go:98:2)
            Fun:
              *ast.SelectorExpr (go-nodes/struct_types.go:98:2)
                X:
                  *ast.Ident (go-nodes/struct_types.go:98:2) Name: fmt
                Sel: Println
            Args:
              [0]:
                *ast.BasicLit (go-nodes/struct_types.go:98:14) Kind: STRING Value: "Exercising AST Nodes:"
        *ast.ExprStmt (go-nodes/struct_types.go:101:2)
          *ast.CallExpr (go-nodes/struct_types.go:101:2)
            Fun:
              *ast.SelectorExpr (go-nodes/struct_types.go:101:2)
                X:
                  *ast.Ident (go-nodes/struct_types.go:101:2) Name: fmt
                Sel: Println
            Args:
              [0]:
                *ast.BasicLit (go-nodes/struct_types.go:101:14) Kind: STRING Value: "  ✓ ast.StructType (simple):"
        *ast.AssignStmt (go-nodes/struct_types.go:102:2) Token: :=
          LHS:
            *ast.Ident (go-nodes/struct_types.go:102:2) Name: p
          RHS:
            *ast.CompositeLit (go-nodes/struct_types.go:102:7)
              Type:
                *ast.Ident (go-nodes/struct_types.go:102:7) Name: Person
              Elts:
                [0]:
                  *ast.KeyValueExpr (go-nodes/struct_types.go:102:14)
                [1]:
                  *ast.KeyValueExpr (go-nodes/struct_types.go:102:29)
        *ast.ExprStmt (go-nodes/struct_types.go:103:2)
          *ast.CallExpr (go-nodes/struct_types.go:103:2)
            Fun:
              *ast.SelectorExpr (go-nodes/struct_types.go:103:2)
                X:
                  *ast.Ident (go-nodes/struct_types.go:103:2) Name: fmt
                Sel: Printf
            Args:
              [0]:
                *ast.BasicLit (go-nodes/struct_types.go:103:13) Kind: STRING Value: "    Person: %+v\n"
              [1]:
                *ast.Ident (go-nodes/struct_types.go:103:34) Name: p
        *ast.ExprStmt (go-nodes/struct_types.go:106:2)
          *ast.CallExpr (go-nodes/struct_types.go:106:2)
            Fun:
              *ast.SelectorExpr (go-nodes/struct_types.go:106:2)
                X:
                  *ast.Ident (go-nodes/struct_types.go:106:2) Name: fmt
                Sel: Println
            Args:
              [0]:
                *ast.BasicLit (go-nodes/struct_types.go:106:14) Kind: STRING Value: "  ✓ ast.StructType with ast.Tag:"
        *ast.AssignStmt (go-nodes/struct_types.go:107:2) Token: :=
          LHS:
            *ast.Ident (go-nodes/struct_types.go:107:2) Name: jp
          RHS:
            *ast.CompositeLit (go-nodes/struct_types.go:107:8)
              Type:
                *ast.Ident (go-nodes/struct_types.go:107:8) Name: JSONPerson
              Elts:
                [0]:
                  *ast.KeyValueExpr (go-nodes/struct_types.go:108:3)
                [1]:
                  *ast.KeyValueExpr (go-nodes/struct_types.go:109:3)
                [2]:
                  *ast.KeyValueExpr (go-nodes/struct_types.go:110:3)
        *ast.ExprStmt (go-nodes/struct_types.go:112:2)
          *ast.CallExpr (go-nodes/struct_types.go:112:2)
            Fun:
              *ast.SelectorExpr (go-nodes/struct_types.go:112:2)
                X:
                  *ast.Ident (go-nodes/struct_types.go:112:2) Name: fmt
                Sel: Printf
            Args:
              [0]:
                *ast.BasicLit (go-nodes/struct_types.go:112:13) Kind: STRING Value: "    JSONPerson: %+v\n"
              [1]:
                *ast.Ident (go-nodes/struct_types.go:112:38) Name: jp
        *ast.ExprStmt (go-nodes/struct_types.go:115:2)
          *ast.CallExpr (go-nodes/struct_types.go:115:2)
            Fun:
              *ast.SelectorExpr (go-nodes/struct_types.go:115:2)
                X:
                  *ast.Ident (go-nodes/struct_types.go:115:2) Name: fmt
                Sel: Println
            Args:
              [0]:
                *ast.BasicLit (go-nodes/struct_types.go:115:14) Kind: STRING Value: "  ✓ ast.StructType (embedded fields):"
        *ast.AssignStmt (go-nodes/struct_types.go:116:2) Token: :=
          LHS:
            *ast.Ident (go-nodes/struct_types.go:116:2) Name: e
          RHS:
            *ast.CompositeLit (go-nodes/struct_types.go:116:7)
              Type:
                *ast.Ident (go-nodes/struct_types.go:116:7) Name: Employee
              Elts:
                [0]:
                  *ast.KeyValueExpr (go-nodes/struct_types.go:117:3)
                [1]:
                  *ast.KeyValueExpr (go-nodes/struct_types.go:121:3)
                [2]:
                  *ast.KeyValueExpr (go-nodes/struct_types.go:126:3)
                [3]:
                  *ast.KeyValueExpr (go-nodes/struct_types.go:127:3)
        *ast.ExprStmt (go-nodes/struct_types.go:129:2)
          *ast.CallExpr (go-nodes/struct_types.go:129:2)
            Fun:
              *ast.SelectorExpr (go-nodes/struct_types.go:129:2)
                X:
                  *ast.Ident (go-nodes/struct_types.go:129:2) Name: fmt
                Sel: Printf
            Args:
              [0]:
                *ast.BasicLit (go-nodes/struct_types.go:129:13) Kind: STRING Value: "    Employee.Name (via Person): %s\n"
              [1]:
                *ast.SelectorExpr (go-nodes/struct_types.go:129:53)
                  X:
                    *ast.Ident (go-nodes/struct_types.go:129:53) Name: e
                  Sel: Name
        *ast.ExprStmt (go-nodes/struct_types.go:130:2)
          *ast.CallExpr (go-nodes/struct_types.go:130:2)
            Fun:
              *ast.SelectorExpr (go-nodes/struct_types.go:130:2)
                X:
                  *ast.Ident (go-nodes/struct_types.go:130:2) Name: fmt
                Sel: Printf
            Args:
              [0]:
                *ast.BasicLit (go-nodes/struct_types.go:130:13) Kind: STRING Value: "    Employee.City (via Address): %s\n"
              [1]:
                *ast.SelectorExpr (go-nodes/struct_types.go:130:54)
                  X:
                    *ast.Ident (go-nodes/struct_types.go:130:54) Name: e
                  Sel: City
        *ast.ExprStmt (go-nodes/struct_types.go:131:2)
          *ast.CallExpr (go-nodes/struct_types.go:131:2)
            Fun:
              *ast.SelectorExpr (go-nodes/struct_types.go:131:2)
                X:
                  *ast.Ident (go-nodes/struct_types.go:131:2) Name: fmt
                Sel: Printf
            Args:
              [0]:
                *ast.BasicLit (go-nodes/struct_types.go:131:13) Kind: STRING Value: "    Employee.Department: %s\n"
              [1]:
                *ast.SelectorExpr (go-nodes/struct_types.go:131:46)
                  X:
                    *ast.Ident (go-nodes/struct_types.go:131:46) Name: e
                  Sel: Department
        *ast.ExprStmt (go-nodes/struct_types.go:134:2)
          *ast.CallExpr (go-nodes/struct_types.go:134:2)
            Fun:
              *ast.SelectorExpr (go-nodes/struct_types.go:134:2)
                X:
                  *ast.Ident (go-nodes/struct_types.go:134:2) Name: fmt
                Sel: Println
            Args:
              [0]:
                *ast.BasicLit (go-nodes/struct_types.go:134:14) Kind: STRING Value: "  ✓ ast.StructType (anonymous fields):"
        *ast.AssignStmt (go-nodes/struct_types.go:135:2) Token: :=
          LHS:
            *ast.Ident (go-nodes/struct_types.go:135:2) Name: m
          RHS:
            *ast.CompositeLit (go-nodes/struct_types.go:135:7)
              Type:
                *ast.Ident (go-nodes/struct_types.go:135:7) Name: Mixed
              Elts:
                [0]:
                  *ast.KeyValueExpr (go-nodes/struct_types.go:136:3)
                [1]:
                  *ast.KeyValueExpr (go-nodes/struct_types.go:137:3)
                [2]:
                  *ast.KeyValueExpr (go-nodes/struct_types.go:138:3)
        *ast.ExprStmt (go-nodes/struct_types.go:140:2)
          *ast.CallExpr (go-nodes/struct_types.go:140:2)
            Fun:
              *ast.SelectorExpr (go-nodes/struct_types.go:140:2)
                X:
                  *ast.Ident (go-nodes/struct_types.go:140:2) Name: fmt
                Sel: Printf
            Args:
              [0]:
                *ast.BasicLit (go-nodes/struct_types.go:140:13) Kind: STRING Value: "    Mixed.int: %d\n"
              [1]:
                *ast.SelectorExpr (go-nodes/struct_types.go:140:36)
                  X:
                    *ast.Ident (go-nodes/struct_types.go:140:36) Name: m
                  Sel: int
        *ast.ExprStmt (go-nodes/struct_types.go:141:2)
          *ast.CallExpr (go-nodes/struct_types.go:141:2)
            Fun:
              *ast.SelectorExpr (go-nodes/struct_types.go:141:2)
                X:
                  *ast.Ident (go-nodes/struct_types.go:141:2) Name: fmt
                Sel: Printf
            Args:
              [0]:
                *ast.BasicLit (go-nodes/struct_types.go:141:13) Kind: STRING Value: "    Mixed.string: %s\n"
              [1]:
                *ast.SelectorExpr (go-nodes/struct_types.go:141:39)
                  X:
                    *ast.Ident (go-nodes/struct_types.go:141:39) Name: m
                  Sel: string
        *ast.ExprStmt (go-nodes/struct_types.go:142:2)
          *ast.CallExpr (go-nodes/struct_types.go:142:2)
            Fun:
              *ast.SelectorExpr (go-nodes/struct_types.go:142:2)
                X:
                  *ast.Ident (go-nodes/struct_types.go:142:2) Name: fmt
                Sel: Printf
            Args:
              [0]:
                *ast.BasicLit (go-nodes/struct_types.go:142:13) Kind: STRING Value: "    Mixed.Named: %d\n"
              [1]:
                *ast.SelectorExpr (go-nodes/struct_types.go:142:38)
                  X:
                    *ast.Ident (go-nodes/struct_types.go:142:38) Name: m
                  Sel: Named
        *ast.ExprStmt (go-nodes/struct_types.go:145:2)
          *ast.CallExpr (go-nodes/struct_types.go:145:2)
            Fun:
              *ast.SelectorExpr (go-nodes/struct_types.go:145:2)
                X:
                  *ast.Ident (go-nodes/struct_types.go:145:2) Name: fmt
                Sel: Println
            Args:
              [0]:
                *ast.BasicLit (go-nodes/struct_types.go:145:14) Kind: STRING Value: "  ✓ ast.StructType (self-referential):"
        *ast.AssignStmt (go-nodes/struct_types.go:146:2) Token: :=
          LHS:
            *ast.Ident (go-nodes/struct_types.go:146:2) Name: n1
          RHS:
            *ast.UnaryExpr (go-nodes/struct_types.go:146:8) Op: &
              X:
                *ast.CompositeLit (go-nodes/struct_types.go:146:9)
                  Type:
                    *ast.Ident (go-nodes/struct_types.go:146:9) Name: Node
                  Elts:
                    [0]:
                      *ast.KeyValueExpr (go-nodes/struct_types.go:146:14)
        *ast.AssignStmt (go-nodes/struct_types.go:147:2) Token: :=
          LHS:
            *ast.Ident (go-nodes/struct_types.go:147:2) Name: n2
          RHS:
            *ast.UnaryExpr (go-nodes/struct_types.go:147:8) Op: &
              X:
                *ast.CompositeLit (go-nodes/struct_types.go:147:9)
                  Type:
                    *ast.Ident (go-nodes/struct_types.go:147:9) Name: Node
                  Elts:
                    [0]:
                      *ast.KeyValueExpr (go-nodes/struct_types.go:147:14)
        *ast.AssignStmt (go-nodes/struct_types.go:148:2) Token: :=
          LHS:
            *ast.Ident (go-nodes/struct_types.go:148:2) Name: n3
          RHS:
            *ast.UnaryExpr (go-nodes/struct_types.go:148:8) Op: &
              X:
                *ast.CompositeLit (go-nodes/struct_types.go:148:9)
                  Type:
                    *ast.Ident (go-nodes/struct_types.go:148:9) Name: Node
                  Elts:
                    [0]:
                      *ast.KeyValueExpr (go-nodes/struct_types.go:148:14)
        *ast.AssignStmt (go-nodes/struct_types.go:149:2) Token: =
          LHS:
            *ast.SelectorExpr (go-nodes/struct_types.go:149:2)
              X:
                *ast.Ident (go-nodes/struct_types.go:149:2) Name: n1
              Sel: Next
          RHS:
            *ast.Ident (go-nodes/struct_types.go:149:12) Name: n2
        *ast.AssignStmt (go-nodes/struct_types.go:150:2) Token: =
          LHS:
            *ast.SelectorExpr (go-nodes/struct_types.go:150:2)
              X:
                *ast.Ident (go-nodes/struct_types.go:150:2) Name: n2
              Sel: Prev
          RHS:
            *ast.Ident (go-nodes/struct_types.go:150:12) Name: n1
        *ast.AssignStmt (go-nodes/struct_types.go:151:2) Token: =
          LHS:
            *ast.SelectorExpr (go-nodes/struct_types.go:151:2)
              X:
                *ast.Ident (go-nodes/struct_types.go:151:2) Name: n2
              Sel: Next
          RHS:
            *ast.Ident (go-nodes/struct_types.go:151:12) Name: n3
        *ast.AssignStmt (go-nodes/struct_types.go:152:2) Token: =
          LHS:
            *ast.SelectorExpr (go-nodes/struct_types.go:152:2)
              X:
                *ast.Ident (go-nodes/struct_types.go:152:2) Name: n3
              Sel: Prev
          RHS:
            *ast.Ident (go-nodes/struct_types.go:152:12) Name: n2
        *ast.ExprStmt (go-nodes/struct_types.go:153:2)
          *ast.CallExpr (go-nodes/struct_types.go:153:2)
            Fun:
              *ast.SelectorExpr (go-nodes/struct_types.go:153:2)
                X:
                  *ast.Ident (go-nodes/struct_types.go:153:2) Name: fmt
                Sel: Printf
            Args:
              [0]:
                *ast.BasicLit (go-nodes/struct_types.go:153:13) Kind: STRING Value: "    Linked list: %d -> %d -> %d\n"
              [1]:
                *ast.SelectorExpr (go-nodes/struct_types.go:153:50)
                  X:
                    *ast.Ident (go-nodes/struct_types.go:153:50) Name: n1
                  Sel: Value
              [2]:
                *ast.SelectorExpr (go-nodes/struct_types.go:153:60)
                  X:
                    *ast.SelectorExpr (go-nodes/struct_types.go:153:60)
                      X:
                        *ast.Ident (go-nodes/struct_types.go:153:60) Name: n1
                      Sel: Next
                  Sel: Value
              [3]:
                *ast.SelectorExpr (go-nodes/struct_types.go:153:75)
                  X:
                    *ast.SelectorExpr (go-nodes/struct_types.go:153:75)
                      X:
                        *ast.SelectorExpr (go-nodes/struct_types.go:153:75)
                          X:
                            *ast.Ident (go-nodes/struct_types.go:153:75) Name: n1
                          Sel: Next
                      Sel: Next
                  Sel: Value
        *ast.ExprStmt (go-nodes/struct_types.go:156:2)
          *ast.CallExpr (go-nodes/struct_types.go:156:2)
            Fun:
              *ast.SelectorExpr (go-nodes/struct_types.go:156:2)
                X:
                  *ast.Ident (go-nodes/struct_types.go:156:2) Name: fmt
                Sel: Println
            Args:
              [0]:
                *ast.BasicLit (go-nodes/struct_types.go:156:14) Kind: STRING Value: "  ✓ ast.StructType (empty):"
        *ast.DeclStmt (go-nodes/struct_types.go:157:2)
          *ast.GenDecl (go-nodes/struct_types.go:157:2) Token: var
            *ast.ValueSpec (go-nodes/struct_types.go:157:6)
              Name: empty
              Type:
                *ast.Ident (go-nodes/struct_types.go:157:12) Name: Empty
        *ast.AssignStmt (go-nodes/struct_types.go:158:2) Token: =
          LHS:
            *ast.Ident (go-nodes/struct_types.go:158:2) Name: _
          RHS:
            *ast.Ident (go-nodes/struct_types.go:158:6) Name: empty
        *ast.ExprStmt (go-nodes/struct_types.go:159:2)
          *ast.CallExpr (go-nodes/struct_types.go:159:2)
            Fun:
              *ast.SelectorExpr (go-nodes/struct_types.go:159:2)
                X:
                  *ast.Ident (go-nodes/struct_types.go:159:2) Name: fmt
                Sel: Printf
            Args:
              [0]:
                *ast.BasicLit (go-nodes/struct_types.go:159:13) Kind: STRING Value: "    Empty struct: %+v\n"
              [1]:
                *ast.Ident (go-nodes/struct_types.go:159:40) Name: empty
        *ast.ExprStmt (go-nodes/struct_types.go:160:2)
          *ast.CallExpr (go-nodes/struct_types.go:160:2)
            Fun:
              *ast.SelectorExpr (go-nodes/struct_types.go:160:2)
                X:
                  *ast.Ident (go-nodes/struct_types.go:160:2) Name: fmt
                Sel: Printf
            Args:
              [0]:
                *ast.BasicLit (go-nodes/struct_types.go:160:13) Kind: STRING Value: "    Empty struct size: %d bytes\n"
              [1]:
                *ast.BasicLit (go-nodes/struct_types.go:160:50) Kind: INT Value: 0
        *ast.ExprStmt (go-nodes/struct_types.go:163:2)
          *ast.CallExpr (go-nodes/struct_types.go:163:2)
            Fun:
              *ast.SelectorExpr (go-nodes/struct_types.go:163:2)
                X:
                  *ast.Ident (go-nodes/struct_types.go:163:2) Name: fmt
                Sel: Println
            Args:
              [0]:
                *ast.BasicLit (go-nodes/struct_types.go:163:14) Kind: STRING Value: "  ✓ ast.StructType (complex with ast.Field variations):"
        *ast.AssignStmt (go-nodes/struct_types.go:164:2) Token: :=
          LHS:
            *ast.Ident (go-nodes/struct_types.go:164:2) Name: num
          RHS:
            *ast.BasicLit (go-nodes/struct_types.go:164:9) Kind: INT Value: 42
        *ast.AssignStmt (go-nodes/struct_types.go:165:2) Token: :=
          LHS:
            *ast.Ident (go-nodes/struct_types.go:165:2) Name: c
          RHS:
            *ast.CompositeLit (go-nodes/struct_types.go:165:7)
              Type:
                *ast.Ident (go-nodes/struct_types.go:165:7) Name: Complex
              Elts:
                [0]:
                  *ast.KeyValueExpr (go-nodes/struct_types.go:166:3)
                [1]:
                  *ast.KeyValueExpr (go-nodes/struct_types.go:167:3)
                [2]:
                  *ast.KeyValueExpr (go-nodes/struct_types.go:168:3)
                [3]:
                  *ast.KeyValueExpr (go-nodes/struct_types.go:169:3)
                [4]:
                  *ast.KeyValueExpr (go-nodes/struct_types.go:170:3)
                [5]:
                  *ast.KeyValueExpr (go-nodes/struct_types.go:171:3)
                [6]:
                  *ast.KeyValueExpr (go-nodes/struct_types.go:172:3)
                [7]:
                  *ast.KeyValueExpr (go-nodes/struct_types.go:173:3)
                [8]:
                  *ast.KeyValueExpr (go-nodes/struct_types.go:174:3)
                [9]:
                  *ast.KeyValueExpr (go-nodes/struct_types.go:175:3)
                [10]:
                  *ast.KeyValueExpr (go-nodes/struct_types.go:176:3)
        *ast.ExprStmt (go-nodes/struct_types.go:178:2)
          *ast.CallExpr (go-nodes/struct_types.go:178:2)
            Fun:
              *ast.SelectorExpr (go-nodes/struct_types.go:178:2)
                X:
                  *ast.Ident (go-nodes/struct_types.go:178:2) Name: fmt
                Sel: Printf
            Args:
              [0]:
                *ast.BasicLit (go-nodes/struct_types.go:178:13) Kind: STRING Value: "    Complex.IntField: %d\n"
              [1]:
                *ast.SelectorExpr (go-nodes/struct_types.go:178:43)
                  X:
                    *ast.Ident (go-nodes/struct_types.go:178:43) Name: c
                  Sel: IntField
        *ast.ExprStmt (go-nodes/struct_types.go:179:2)
          *ast.CallExpr (go-nodes/struct_types.go:179:2)
            Fun:
              *ast.SelectorExpr (go-nodes/struct_types.go:179:2)
                X:
                  *ast.Ident (go-nodes/struct_types.go:179:2) Name: fmt
                Sel: Printf
            Args:
              [0]:
                *ast.BasicLit (go-nodes/struct_types.go:179:13) Kind: STRING Value: "    Complex.PtrField: %d\n"
              [1]:
                *ast.StarExpr (go-nodes/struct_types.go:179:43)
        *ast.ExprStmt (go-nodes/struct_types.go:180:2)
          *ast.CallExpr (go-nodes/struct_types.go:180:2)
            Fun:
              *ast.SelectorExpr (go-nodes/struct_types.go:180:2)
                X:
                  *ast.Ident (go-nodes/struct_types.go:180:2) Name: fmt
                Sel: Printf
            Args:
              [0]:
                *ast.BasicLit (go-nodes/struct_types.go:180:13) Kind: STRING Value: "    Complex.ArrayField: %v\n"
              [1]:
                *ast.SelectorExpr (go-nodes/struct_types.go:180:45)
                  X:
                    *ast.Ident (go-nodes/struct_types.go:180:45) Name: c
                  Sel: ArrayField
        *ast.ExprStmt (go-nodes/struct_types.go:181:2)
          *ast.CallExpr (go-nodes/struct_types.go:181:2)
            Fun:
              *ast.SelectorExpr (go-nodes/struct_types.go:181:2)
                X:
                  *ast.Ident (go-nodes/struct_types.go:181:2) Name: fmt
                Sel: Printf
            Args:
              [0]:
                *ast.BasicLit (go-nodes/struct_types.go:181:13) Kind: STRING Value: "    Complex.SliceField: %v\n"
              [1]:
                *ast.SelectorExpr (go-nodes/struct_types.go:181:45)
                  X:
                    *ast.Ident (go-nodes/struct_types.go:181:45) Name: c
                  Sel: SliceField
        *ast.ExprStmt (go-nodes/struct_types.go:182:2)
          *ast.CallExpr (go-nodes/struct_types.go:182:2)
            Fun:
              *ast.SelectorExpr (go-nodes/struct_types.go:182:2)
                X:
                  *ast.Ident (go-nodes/struct_types.go:182:2) Name: fmt
                Sel: Printf
            Args:
              [0]:
                *ast.BasicLit (go-nodes/struct_types.go:182:13) Kind: STRING Value: "    Complex.MapField: %v\n"
              [1]:
                *ast.SelectorExpr (go-nodes/struct_types.go:182:43)
                  X:
                    *ast.Ident (go-nodes/struct_types.go:182:43) Name: c
                  Sel: MapField
        *ast.ExprStmt (go-nodes/struct_types.go:183:2)
          *ast.CallExpr (go-nodes/struct_types.go:183:2)
            Fun:
              *ast.SelectorExpr (go-nodes/struct_types.go:183:2)
                X:
                  *ast.Ident (go-nodes/struct_types.go:183:2) Name: fmt
                Sel: Printf
            Args:
              [0]:
                *ast.BasicLit (go-nodes/struct_types.go:183:13) Kind: STRING Value: "    Complex.FuncField(99): %s\n"
              [1]:
                *ast.CallExpr (go-nodes/struct_types.go:183:48)
                  Fun:
                    *ast.SelectorExpr (go-nodes/struct_types.go:183:48)
                      X:
                        *ast.Ident (go-nodes/struct_types.go:183:48) Name: c
                      Sel: FuncField
                  Args:
                    [0]:
                      *ast.BasicLit (go-nodes/struct_types.go:183:60) Kind: INT Value: 99
        *ast.ExprStmt (go-nodes/struct_types.go:184:2)
          *ast.CallExpr (go-nodes/struct_types.go:184:2)
            Fun:
              *ast.SelectorExpr (go-nodes/struct_types.go:184:2)
                X:
                  *ast.Ident (go-nodes/struct_types.go:184:2) Name: fmt
                Sel: Printf
            Args:
              [0]:
                *ast.BasicLit (go-nodes/struct_types.go:184:13) Kind: STRING Value: "    Complex.NestedField: %+v\n"
              [1]:
                *ast.SelectorExpr (go-nodes/struct_types.go:184:47)
                  X:
                    *ast.Ident (go-nodes/struct_types.go:184:47) Name: c
                  Sel: NestedField
        *ast.ExprStmt (go-nodes/struct_types.go:187:2)
          *ast.CallExpr (go-nodes/struct_types.go:187:2)
            Fun:
              *ast.SelectorExpr (go-nodes/struct_types.go:187:2)
                X:
                  *ast.Ident (go-nodes/struct_types.go:187:2) Name: fmt
                Sel: Println
            Args:
              [0]:
                *ast.BasicLit (go-nodes/struct_types.go:187:14) Kind: STRING Value: "  ✓ ast.StructType (anonymous):"
        *ast.AssignStmt (go-nodes/struct_types.go:188:2) Token: :=
          LHS:
            *ast.Ident (go-nodes/struct_types.go:188:2) Name: anon
          RHS:
            *ast.CompositeLit (go-nodes/struct_types.go:188:10)
              Type:
                *ast.StructType (go-nodes/struct_types.go:188:10)
                  *ast.FieldList (go-nodes/struct_types.go:188:17) NumFields: 2
                    Field[0]:
                      *ast.Field (go-nodes/struct_types.go:189:3)
                        Name: X
                        Type:
                          *ast.Ident (go-nodes/struct_types.go:189:5) Name: int
                    Field[1]:
                      *ast.Field (go-nodes/struct_types.go:190:3)
                        Name: Y
                        Type:
                          *ast.Ident (go-nodes/struct_types.go:190:5) Name: string
              Elts:
                [0]:
                  *ast.KeyValueExpr (go-nodes/struct_types.go:192:3)
                [1]:
                  *ast.KeyValueExpr (go-nodes/struct_types.go:193:3)
        *ast.ExprStmt (go-nodes/struct_types.go:195:2)
          *ast.CallExpr (go-nodes/struct_types.go:195:2)
            Fun:
              *ast.SelectorExpr (go-nodes/struct_types.go:195:2)
                X:
                  *ast.Ident (go-nodes/struct_types.go:195:2) Name: fmt
                Sel: Printf
            Args:
              [0]:
                *ast.BasicLit (go-nodes/struct_types.go:195:13) Kind: STRING Value: "    Anonymous struct: %+v\n"
              [1]:
                *ast.Ident (go-nodes/struct_types.go:195:44) Name: anon
        *ast.ExprStmt (go-nodes/struct_types.go:198:2)
          *ast.CallExpr (go-nodes/struct_types.go:198:2)
            Fun:
              *ast.SelectorExpr (go-nodes/struct_types.go:198:2)
                X:
                  *ast.Ident (go-nodes/struct_types.go:198:2) Name: fmt
                Sel: Println
            Args:
              [0]:
                *ast.BasicLit (go-nodes/struct_types.go:198:14) Kind: STRING Value: "  ✓ ast.Field access patterns:"
        *ast.ExprStmt (go-nodes/struct_types.go:199:2)
          *ast.CallExpr (go-nodes/struct_types.go:199:2)
            Fun:
              *ast.SelectorExpr (go-nodes/struct_types.go:199:2)
                X:
                  *ast.Ident (go-nodes/struct_types.go:199:2) Name: fmt
                Sel: Printf
            Args:
              [0]:
                *ast.BasicLit (go-nodes/struct_types.go:199:13) Kind: STRING Value: "    Direct access: p.Name = %s\n"
              [1]:
                *ast.SelectorExpr (go-nodes/struct_types.go:199:49)
                  X:
                    *ast.Ident (go-nodes/struct_types.go:199:49) Name: p
                  Sel: Name
        *ast.ExprStmt (go-nodes/struct_types.go:200:2)
          *ast.CallExpr (go-nodes/struct_types.go:200:2)
            Fun:
              *ast.SelectorExpr (go-nodes/struct_types.go:200:2)
                X:
                  *ast.Ident (go-nodes/struct_types.go:200:2) Name: fmt
                Sel: Printf
            Args:
              [0]:
                *ast.BasicLit (go-nodes/struct_types.go:200:13) Kind: STRING Value: "    Pointer access: (&p).Age = %d\n"
              [1]:
                *ast.SelectorExpr (go-nodes/struct_types.go:200:52)
                  X:
                    *ast.ParenExpr (go-nodes/struct_types.go:200:52)
                  Sel: Age
        *ast.AssignStmt (go-nodes/struct_types.go:201:2) Token: :=
          LHS:
            *ast.Ident (go-nodes/struct_types.go:201:2) Name: pPtr
          RHS:
            *ast.UnaryExpr (go-nodes/struct_types.go:201:10) Op: &
              X:
                *ast.Ident (go-nodes/struct_types.go:201:11) Name: p
        *ast.ExprStmt (go-nodes/struct_types.go:202:2)
          *ast.CallExpr (go-nodes/struct_types.go:202:2)
            Fun:
              *ast.SelectorExpr (go-nodes/struct_types.go:202:2)
                X:
                  *ast.Ident (go-nodes/struct_types.go:202:2) Name: fmt
                Sel: Printf
            Args:
              [0]:
                *ast.BasicLit (go-nodes/struct_types.go:202:13) Kind: STRING Value: "    Via pointer: pPtr.Name = %s\n"
              [1]:
                *ast.SelectorExpr (go-nodes/struct_types.go:202:50)
                  X:
                    *ast.Ident (go-nodes/struct_types.go:202:50) Name: pPtr
                  Sel: Name
        *ast.ExprStmt (go-nodes/struct_types.go:205:2)
          *ast.CallExpr (go-nodes/struct_types.go:205:2)
            Fun:
              *ast.SelectorExpr (go-nodes/struct_types.go:205:2)
                X:
                  *ast.Ident (go-nodes/struct_types.go:205:2) Name: fmt
                Sel: Println
            Args:
              [0]:
                *ast.BasicLit (go-nodes/struct_types.go:205:14) Kind: STRING Value: "  ✓ ast.StructType with methods:"
        *ast.AssignStmt (go-nodes/struct_types.go:206:2) Token: :=
          LHS:
            *ast.Ident (go-nodes/struct_types.go:206:2) Name: rect
          RHS:
            *ast.CompositeLit (go-nodes/struct_types.go:206:10)
              Type:
                *ast.Ident (go-nodes/struct_types.go:206:10) Name: Rectangle
              Elts:
                [0]:
                  *ast.KeyValueExpr (go-nodes/struct_types.go:206:20)
                [1]:
                  *ast.KeyValueExpr (go-nodes/struct_types.go:206:31)
        *ast.ExprStmt (go-nodes/struct_types.go:207:2)
          *ast.CallExpr (go-nodes/struct_types.go:207:2)
            Fun:
              *ast.SelectorExpr (go-nodes/struct_types.go:207:2)
                X:
                  *ast.Ident (go-nodes/struct_types.go:207:2) Name: fmt
                Sel: Printf
            Args:
              [0]:
                *ast.BasicLit (go-nodes/struct_types.go:207:13) Kind: STRING Value: "    Rectangle area: %d\n"
              [1]:
                *ast.CallExpr (go-nodes/struct_types.go:207:41)
                  Fun:
                    *ast.SelectorExpr (go-nodes/struct_types.go:207:41)
                      X:
                        *ast.Ident (go-nodes/struct_types.go:207:41) Name: rect
                      Sel: Area
        *ast.ExprStmt (go-nodes/struct_types.go:208:2)
          *ast.CallExpr (go-nodes/struct_types.go:208:2)
            Fun:
              *ast.SelectorExpr (go-nodes/struct_types.go:208:2)
                X:
                  *ast.Ident (go-nodes/struct_types.go:208:2) Name: fmt
                Sel: Printf
            Args:
              [0]:
                *ast.BasicLit (go-nodes/struct_types.go:208:13) Kind: STRING Value: "    Rectangle perimeter: %d\n"
              [1]:
                *ast.CallExpr (go-nodes/struct_types.go:208:46)
                  Fun:
                    *ast.SelectorExpr (go-nodes/struct_types.go:208:46)
                      X:
                        *ast.Ident (go-nodes/struct_types.go:208:46) Name: rect
                      Sel: Perimeter
        *ast.ExprStmt (go-nodes/struct_types.go:211:2)
          *ast.CallExpr (go-nodes/struct_types.go:211:2)
            Fun:
              *ast.SelectorExpr (go-nodes/struct_types.go:211:2)
                X:
                  *ast.Ident (go-nodes/struct_types.go:211:2) Name: fmt
                Sel: Println
            Args:
              [0]:
                *ast.BasicLit (go-nodes/struct_types.go:211:14) Kind: STRING Value: "  ✓ Struct operations:"
        *ast.AssignStmt (go-nodes/struct_types.go:212:2) Token: :=
          LHS:
            *ast.Ident (go-nodes/struct_types.go:212:2) Name: p1
          RHS:
            *ast.CompositeLit (go-nodes/struct_types.go:212:8)
              Type:
                *ast.Ident (go-nodes/struct_types.go:212:8) Name: Person
              Elts:
                [0]:
                  *ast.KeyValueExpr (go-nodes/struct_types.go:212:15)
                [1]:
                  *ast.KeyValueExpr (go-nodes/struct_types.go:212:30)
        *ast.AssignStmt (go-nodes/struct_types.go:213:2) Token: :=
          LHS:
            *ast.Ident (go-nodes/struct_types.go:213:2) Name: p2
          RHS:
            *ast.CompositeLit (go-nodes/struct_types.go:213:8)
              Type:
                *ast.Ident (go-nodes/struct_types.go:213:8) Name: Person
              Elts:
                [0]:
                  *ast.KeyValueExpr (go-nodes/struct_types.go:213:15)
                [1]:
                  *ast.KeyValueExpr (go-nodes/struct_types.go:213:30)
        *ast.AssignStmt (go-nodes/struct_types.go:214:2) Token: :=
          LHS:
            *ast.Ident (go-nodes/struct_types.go:214:2) Name: p3
          RHS:
            *ast.CompositeLit (go-nodes/struct_types.go:214:8)
              Type:
                *ast.Ident (go-nodes/struct_types.go:214:8) Name: Person
              Elts:
                [0]:
                  *ast.KeyValueExpr (go-nodes/struct_types.go:214:15)
                [1]:
                  *ast.KeyValueExpr (go-nodes/struct_types.go:214:28)
        *ast.ExprStmt (go-nodes/struct_types.go:215:2)
          *ast.CallExpr (go-nodes/struct_types.go:215:2)
            Fun:
              *ast.SelectorExpr (go-nodes/struct_types.go:215:2)
                X:
                  *ast.Ident (go-nodes/struct_types.go:215:2) Name: fmt
                Sel: Printf
            Args:
              [0]:
                *ast.BasicLit (go-nodes/struct_types.go:215:13) Kind: STRING Value: "    p1 == p2: %v\n"
              [1]:
                *ast.BinaryExpr (go-nodes/struct_types.go:215:35) Op: ==
                  X:
                    *ast.Ident (go-nodes/struct_types.go:215:35) Name: p1
                  Y:
                    *ast.Ident (go-nodes/struct_types.go:215:41) Name: p2
        *ast.ExprStmt (go-nodes/struct_types.go:216:2)
          *ast.CallExpr (go-nodes/struct_types.go:216:2)
            Fun:
              *ast.SelectorExpr (go-nodes/struct_types.go:216:2)
                X:
                  *ast.Ident (go-nodes/struct_types.go:216:2) Name: fmt
                Sel: Printf
            Args:
              [0]:
                *ast.BasicLit (go-nodes/struct_types.go:216:13) Kind: STRING Value: "    p1 == p3: %v\n"
              [1]:
                *ast.BinaryExpr (go-nodes/struct_types.go:216:35) Op: ==
                  X:
                    *ast.Ident (go-nodes/struct_types.go:216:35) Name: p1
                  Y:
                    *ast.Ident (go-nodes/struct_types.go:216:41) Name: p3
        *ast.ExprStmt (go-nodes/struct_types.go:218:2)
          *ast.CallExpr (go-nodes/struct_types.go:218:2)
            Fun:
              *ast.SelectorExpr (go-nodes/struct_types.go:218:2)
                X:
                  *ast.Ident (go-nodes/struct_types.go:218:2) Name: fmt
                Sel: Println
            Args:
              [0]:
                *ast.BasicLit (go-nodes/struct_types.go:218:14) Kind: STRING Value: "Summary: Comprehensive struct type AST node coverage"
        *ast.ExprStmt (go-nodes/struct_types.go:219:2)
          *ast.CallExpr (go-nodes/struct_types.go:219:2)
            Fun:
              *ast.SelectorExpr (go-nodes/struct_types.go:219:2)
                X:
                  *ast.Ident (go-nodes/struct_types.go:219:2) Name: fmt
                Sel: Println
            Args:
              [0]:
                *ast.BasicLit (go-nodes/struct_types.go:219:14) Kind: STRING Value: "Primary AST Nodes: ast.StructType, ast.Field, ast.FieldList, ast.Tag"
        *ast.ExprStmt (go-nodes/struct_types.go:220:2)
          *ast.CallExpr (go-nodes/struct_types.go:220:2)
            Fun:
              *ast.SelectorExpr (go-nodes/struct_types.go:220:2)
                X:
                  *ast.Ident (go-nodes/struct_types.go:220:2) Name: fmt
                Sel: Println
            Args:
              [0]:
                *ast.BasicLit (go-nodes/struct_types.go:220:14) Kind: STRING Value: "========================================"
  *ast.GenDecl (go-nodes/struct_types.go:224:1) Token: type
    *ast.TypeSpec (go-nodes/struct_types.go:224:6)
      Name: Rectangle
      Type:
        *ast.StructType (go-nodes/struct_types.go:224:16)
          *ast.FieldList (go-nodes/struct_types.go:224:23) NumFields: 2
            Field[0]:
              *ast.Field (go-nodes/struct_types.go:225:2)
                Name: Width
                Type:
                  *ast.Ident (go-nodes/struct_types.go:225:9) Name: int
            Field[1]:
              *ast.Field (go-nodes/struct_types.go:226:2)
                Name: Height
                Type:
                  *ast.Ident (go-nodes/struct_types.go:226:9) Name: int
  *ast.FuncDecl (go-nodes/struct_types.go:229:1)
    Name: Area
    Receiver:
      *ast.FieldList (go-nodes/struct_types.go:229:6) NumFields: 1
        Field[0]:
          *ast.Field (go-nodes/struct_types.go:229:7)
            Name: r
            Type:
              *ast.Ident (go-nodes/struct_types.go:229:9) Name: Rectangle
    Type:
      *ast.FuncType (go-nodes/struct_types.go:229:1)
        Params:
          *ast.FieldList (go-nodes/struct_types.go:229:24) NumFields: 0
        Results:
          *ast.FieldList (go-nodes/struct_types.go:229:27) NumFields: 1
            Field[0]:
              *ast.Field (go-nodes/struct_types.go:229:27)
                Type:
                  *ast.Ident (go-nodes/struct_types.go:229:27) Name: int
    Body:
      *ast.BlockStmt (go-nodes/struct_types.go:229:31) Stmts: 1
        *ast.ReturnStmt (go-nodes/struct_types.go:230:2)
          Result[0]:
            *ast.BinaryExpr (go-nodes/struct_types.go:230:9) Op: *
              X:
                *ast.SelectorExpr (go-nodes/struct_types.go:230:9)
                  X:
                    *ast.Ident (go-nodes/struct_types.go:230:9) Name: r
                  Sel: Width
              Y:
                *ast.SelectorExpr (go-nodes/struct_types.go:230:19)
                  X:
                    *ast.Ident (go-nodes/struct_types.go:230:19) Name: r
                  Sel: Height
  *ast.FuncDecl (go-nodes/struct_types.go:233:1)
    Name: Perimeter
    Receiver:
      *ast.FieldList (go-nodes/struct_types.go:233:6) NumFields: 1
        Field[0]:
          *ast.Field (go-nodes/struct_types.go:233:7)
            Name: r
            Type:
              *ast.Ident (go-nodes/struct_types.go:233:9) Name: Rectangle
    Type:
      *ast.FuncType (go-nodes/struct_types.go:233:1)
        Params:
          *ast.FieldList (go-nodes/struct_types.go:233:29) NumFields: 0
        Results:
          *ast.FieldList (go-nodes/struct_types.go:233:32) NumFields: 1
            Field[0]:
              *ast.Field (go-nodes/struct_types.go:233:32)
                Type:
                  *ast.Ident (go-nodes/struct_types.go:233:32) Name: int
    Body:
      *ast.BlockStmt (go-nodes/struct_types.go:233:36) Stmts: 1
        *ast.ReturnStmt (go-nodes/struct_types.go:234:2)
          Result[0]:
            *ast.BinaryExpr (go-nodes/struct_types.go:234:9) Op: *
              X:
                *ast.BasicLit (go-nodes/struct_types.go:234:9) Kind: INT Value: 2
              Y:
                *ast.ParenExpr (go-nodes/struct_types.go:234:13)
  *ast.FuncDecl (go-nodes/struct_types.go:237:1)
    Name: main
    Type:
      *ast.FuncType (go-nodes/struct_types.go:237:1)
        Params:
          *ast.FieldList (go-nodes/struct_types.go:237:10) NumFields: 0
    Body:
      *ast.BlockStmt (go-nodes/struct_types.go:237:13) Stmts: 1
        *ast.ExprStmt (go-nodes/struct_types.go:238:2)
          *ast.CallExpr (go-nodes/struct_types.go:238:2)
            Fun:
              *ast.Ident (go-nodes/struct_types.go:238:2) Name: funcMain
